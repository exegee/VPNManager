<UserControl x:Class="Basic.Views.BasicView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Basic.Views"
             xmlns:converters="clr-namespace:VPNManager.Core.Converters;assembly=VPNManager.Core"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:views="clr-namespace:Basic.Views"
             xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"
             Height="400"
             >
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding EditVpnRemoteHostRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="Height" Value="285"/>
                        <Setter Property="Width" Value="450"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <local:EditVpnRemoteHostView/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding BasicViewLoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <converters:VPNConnectionStatusToStringConverter x:Key="VPNConnectionStatusToStringConverter"/>
        <converters:VPNConnectionStatusToBitmapImageConverter x:Key="VPNConnectionStatusToBitmapImageConverter"/>
        <converters:StringToSolidColorBrushConverter x:Key="StringToSolidColorBrushConverter"/>
        <LinearGradientBrush x:Key="GridViewColumnHeaderBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFFFFFFF" Offset="0"/>
            <GradientStop Color="#FFFFFFFF" Offset="0.4091"/>
            <GradientStop Color="#FFF7F8F9" Offset="1"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="GridViewColumnHeaderBorderBackground" Color="Transparent"></SolidColorBrush>

        <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFBDEDFF" Offset="0"/>
            <GradientStop Color="#FFB7E7FB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF8DD6F7" Offset="0"/>
            <GradientStop Color="#FF8AD1F5" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
            <Setter Property="Canvas.Right" Value="-9"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBorderBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="MyFocusVisualStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="10" StrokeThickness="1" Stroke="Red"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="HiddenHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="7"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>
                                    <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                                        <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0"/>
                            <Border x:Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
                            <Canvas>
                                <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderHoverBackground}"/>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF88CBEB"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderPressBackground}"/>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF95DAF9"/>
                                <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FF7A9EB1"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <Setter Property="Fill" TargetName="UpperHighlight" Value="#FFBCE4F9"/>
                                <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
                                <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListViewItem" x:Shared="False">
            <Setter Property="Height" Value="35"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    
                    <Setter Property="IsSelected" Value="True"/>
                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>

                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <!--<Setter Property="FocusManager.IsFocusScope" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl},Mode=FindAncestor}}"/>-->
                </Trigger>
            </Style.Triggers>
            
        </Style>
        <GridView x:Key="vpnHostsList" x:Shared="False">
            <GridView.ColumnHeaderContainerStyle>
                <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
                    <Setter Property="IsHitTestVisible" Value="False"/>
                </Style>
            </GridView.ColumnHeaderContainerStyle>
            <GridViewColumn Header="Status" Width="40">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <Image Source="{Binding Path=Status, Converter={StaticResource VPNConnectionStatusToBitmapImageConverter}}"
                               Height="25" Width="25"/>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="Host name" Width="150">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=HostName}"/>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="Description" Width="350">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=HostDescription}" Margin="0 0 10 0"/>
                        </StackPanel>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="Latency" Width="80">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <Run Text="{Binding Path=Latency}" FontWeight="SemiBold" Foreground="{Binding Path=Latency, Converter={StaticResource StringToSolidColorBrushConverter}}"/>
                            <!--<Run Text=" ms"/>-->
                        </TextBlock>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn HeaderContainerStyle="{StaticResource HiddenHeader}">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Right">
                            <Button Content="{Binding Path=Status, Converter={StaticResource VPNConnectionStatusToStringConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                Command="{Binding DataContext.VPNHostCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=Content}"
                                Padding="5 2 5 2" Width="110"
                                IsEnabled="{Binding Path=IsNoOtherConnectionActive, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
        </GridView>
    </UserControl.Resources>
    <Grid>
        <extToolkit:BusyIndicator BusyContent="Loading available VPN hosts..." IsBusy="{Binding IsBusy}">
            <!--<TextBlock Text="{Binding Status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>-->
            <ListView ItemsSource="{Binding VpnRemoteHosts, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                  View="{DynamicResource vpnHostsList}" ScrollViewer.CanContentScroll="True" Height="Auto" Margin="0 0 0 35">
                <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseRightButtonUp">
                    <i:InvokeCommandAction Command="{Binding MouseRightClickCommand}"
                                           CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}, Mode=FindAncestor}, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add" 
                              >
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/VPNManager.Core;component/Images/add_page.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Edit" 
                              Command="{Binding EditVpnRemoteHostCommand}"
                              CommandParameter="{Binding SelectedVPNConnection}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/VPNManager.Core;component/Images/edit_page.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Delete" 
                              >
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/VPNManager.Core;component/Images/delete_page.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
            </ListView.ContextMenu>
            </ListView>
        
        <!--<Button Command="{Binding ConnectVPNCommand}" Content="{Binding DataContext.ButtonContent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
        <Button Command="{Binding DisconnectVPNCommand}" Content="Disconnect from VPN"/>-->
   
        </extToolkit:BusyIndicator>
    </Grid>
</UserControl>
